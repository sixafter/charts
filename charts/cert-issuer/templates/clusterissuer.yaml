{{-/*
Copyright Six After, Inc. All Rights Reserved.
SPDX-License-Identifier: APACHE-2.0
*/}}

{{- if .Values.acme.enabled }}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ include "issuer.fullname" . }}
  annotations:
    {{- range $key, $value := .Values.global.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  labels:
    {{- range $key, $value := .Values.global.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  acme:
    email: {{ .Values.acme.email | quote }}
    server: {{ .Values.acme.server | quote }}
    privateKeySecretRef:
      name: {{ .Values.acme.privateKeySecretRef | quote }}
    {{- if .Values.acme.skipTLSVerify }}
    skipTLSVerify: true
    {{- else }}
    skipTLSVerify: false
    {{- end }}
    {{- if .Values.acme.disableAccountKeyGeneration }}
    disableAccountKeyGeneration: true
    {{- else }}
    disableAccountKeyGeneration: false
    {{- end }}
    {{- if .Values.acme.enableDurationFeature }}
    enableDurationFeature: true
    {{- else }}
    enableDurationFeature: false
    {{- end }}
    solvers:
    {{- if .Values.acme.solvers }}
    {{- range .Values.acme.solvers }}
    - selector:
        {{- if .selector.dnsZones }}
        dnsZones:
          {{- toYaml .selector.dnsZones | nindent 10 }}
        {{- else }}
        {}
        {{- end }}
      {{- if .dns01 }}
      dns01:
        {{- range $dnsSolver := .dns01 }}
        {{- toYaml $dnsSolver | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .http01 }}
      http01:
        {{- range $httpSolver := .http01 }}
        {{- toYaml $httpSolver | nindent 8 }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- else }}
    []
    {{- end }}
{{- end }}

{{- if .Values.ca.enabled }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ include "issuer.fullname" . }}-ca
  annotations:
    {{- range $key, $value := .Values.global.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  labels:
    {{- range $key, $value := .Values.global.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  ca:
    secretName: {{ .Values.ca.secretName | quote }}
    {{- if .Values.ca.crlDistributionPoints }}
    crlDistributionPoints:
      {{- toYaml .Values.ca.crlDistributionPoints | nindent 6 }}
    {{- end }}
    {{- if .Values.ca.issuingCertificateURLs }}
    issuingCertificateURLs:
      {{- toYaml .Values.ca.issuingCertificateURLs | nindent 6 }}
    {{- end }}
    {{- if .Values.ca.ocspServers }}
    ocspServers:
      {{- toYaml .Values.ca.ocspServers | nindent 6 }}
    {{- end }}
{{- end }}

{{- if .Values.selfSigned.enabled }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ include "issuer.fullname" . }}-self-signed
spec:
  selfSigned: {}
{{- end }}

{{- if .Values.vault.enabled }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ include "issuer.fullname" . }}-vault
  annotations:
    {{- range $key, $value := .Values.global.annotations }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
  labels:
    {{- range $key, $value := .Values.global.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  vault:
    server: {{ .Values.vault.server | quote }}
    path: {{ .Values.vault.path | quote }}
    auth:
      tokenSecretRef:
        name: {{ .Values.vault.auth.tokenSecretRef.name | quote }}
        key: {{ .Values.vault.auth.tokenSecretRef.key | quote }}
{{- end }}
